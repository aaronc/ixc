use crate::lex::{Token, LexicalError};
use crate::ast;
use std::str::FromStr;

grammar;

extern {
  type Location = usize;
  type Error = LexicalError;

  enum Token {
    "ident" => Token::Ident(String),
    "interface" => Token::Interface,
    "handler" => Token::Handler,
    "{" => Token::LBrace,
    "}" => Token::RBrace,
  }
}

pub File: ast::File = {
  <items:Item*> => ast::File { items }
}

pub Item: ast::Item = {
  "interface" <name:"ident"> "{"  "}" => {
    ast::Item::Interface(ast::ItemInterface { name: name.into(), items: vec![] })
  },
}
